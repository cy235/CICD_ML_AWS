# Python CircleCI 2.0 configuration file

# Check https://circleci.com/docs/2.0/language-python/ for more details
#


version: 2.1 
workflows:
  build-deliver-workflow:
    jobs:
      - build
      - deliver:
          requires:
            - build
          filters:
            branches:
              only: master
#                 - master, qa                       

jobs:

  build:
    working_directory: ~/app
    docker:
      - image: circleci/python:3.7.3-stretch


    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Create virtual env
          command: make setup
      - run:
          name: Install packages
          command: make install
      - run:
          name: Install hadolint
          command: | 
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            sudo chmod +x /bin/hadolint
      
      # save build dependencies for next jobs
      - save_cache:
          name: "Save build dependencies"
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - ./devops
      
      - run:
          name: run lint
          command: |
            make lint

      - run:
          name: run test
          command: |
            make test

  deliver:
    working_directory: ~/app
    docker:
      - image: circleci/python:3.7.3-stretch
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}
#       - run:
#           name: Show current branch
#           command: echo ${CIRCLE_BRANCH}
      - run:
          name: Show git commit id
          command: echo ${CIRCLE_SHA1}
      - run: sudo apt-get update
      - run: sudo apt-get install python3-pip
#       - run: sudo apt-get install groff
      - run: sudo pip3 install --upgrade pip
      - run:
          name: Install aws cli
          command: pip3 install awscli --upgrade --user
      - run: ~/.local/bin/aws --version
      - run: chmod +x ~/.local/bin/aws
      
      - run:
          name: "Set AWS region"
          command: ~/.local/bin/aws configure set region us-east-1   
      - run:
          name: Deploy to S3
#           command: |
#            if [ "${CIRCLE_BRANCH}" == "qa" ]; then
#               ~/.local/bin/aws s3 sync /home/circleci/app/ s3://cy235-cicd-bucket/qa --delete
#            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
#                 ~/.local/bin/aws s3 sync /home/circleci/app s3://cy235-cicd-bucket/app --delete
#            fi
          command:
            ~/.local/bin/aws s3 sync /home/circleci/app s3://cy235-cicd-bucket/app --delete

           
      - run:
          name: AWS codedeploy
#           command: |
#             if [ "${CIRCLE_BRANCH}" == "qa" ]; then
#                 ~/.local/bin/aws deploy create-deployment --application-name app-qa --deployment-group-name app-group-qa --file-exists-behavior OVERWRITE --github-location repository="TaikerLiang/APP",commitId="$CIRCLE_SHA1"
#             elif [ "${CIRCLE_BRANCH}" == "master" ]; then
#                 ~/.local/bin/aws deploy create-deployment --application-name cicd-app --deployment-group-name cicd-app-group --file-exists-behavior OVERWRITE --github-location repository="cy235/CICD_ML_AWS",commitId="$CIRCLE_SHA1"
#             fi
          command:
            ~/.local/bin/aws deploy create-deployment --application-name cicd-app --deployment-group-name cicd-app-group --file-exists-behavior OVERWRITE --github-location repository="cy235/CICD_ML_AWS",commitId="$CIRCLE_SHA1"


                             
           
           
           
           
           
           
           
           
           
           
           
           
           
           
           
           
           
           
           
           
           
           
           
 
